{"version":3,"sources":["components/DeleteButton.js","views/Dashboard.js","components/PirateForm.js","views/CreatePirate.js","views/PirateInfo.js","components/UserForm.js","views/RegLog.js","components/LogoutButton.js","App.js","serviceWorker.js","index.js"],"names":["id","remove","onClick","e","confirmAlert","title","message","buttons","label","axios","delete","then","props","useState","pirates","setPirates","loaded","setLoaded","useEffect","get","withCredentials","res","data","sort","firstObj","secondObj","fObj","name","toUpperCase","sObj","catch","err","console","log","filter","pirate","_id","style","textAlign","display","navigate","map","i","border","margin","key","src","imageUrl","alt","DeleteButton","method","url","setName","image","setImageUrl","phrase","setPhrase","treasure","setTreasure","position","setPosition","desc","eye","setEye","hook","setHook","peg","setPeg","errors","setErrors","color","onSubmit","preventDefault","errorArr","errorObj","response","properties","push","type","value","onChange","target","selected","checked","PirateForm","setPirate","verticalAlign","firstName","lastName","email","password","passwordConfirmation","user","setUser","handleChange","post","Login","setEmail","setPassword","setErr","UserForm","App","className","path","Dashboard","CreatePirate","PirateInfo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.07190b8d.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nexport default ({id, remove}) =>{\n    \n    const onClick = e =>{\n        confirmAlert({\n            title: 'Confirm to remove pirate',\n            message: \"Are you sure you want to remove pirate?\",\n            buttons:[\n                {\n                    label: 'Walk the Plank',\n                    onClick: () => {\n                        axios.delete('http://localhost:8000/api/pirate/'+id)\n                            .then(()=> remove(id))\n                        }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () =>{\n                    }\n                }\n            ]\n        })\n    }\n    return (\n        <button onClick={onClick}>Walk the Plank</button>\n    )\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {navigate} from '@reach/router';\nimport DeleteButton from '../components/DeleteButton';\nexport default props =>{\n    const [pirates, setPirates] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(()=>{\n        axios.get('http://localhost:8000/api', {\n            withCredentials:true\n        })\n            .then(res=>{\n                res.data.sort((firstObj,secondObj)=>{\n                    const fObj = firstObj.name.toUpperCase();\n                    const sObj = secondObj.name.toUpperCase();\n                    return (fObj< sObj) ? -1 : (fObj > sObj) ? 1 : 0;\n                });\n                setPirates(res.data);\n                setLoaded(true);\n            })\n            .catch(err=>console.log(err));\n    },[]);\n\n    const remove = id =>{\n        setPirates(pirates.filter(pirate=>pirate._id!==id))\n    }\n\n    if(!loaded) return \"Loading....\";\n\n    return(\n        <div>\n            <div style={{textAlign:'center'}}>\n                <div>\n                    <h2 style={{display:'inline-block'}}>Pirate Crew</h2>\n                    <button style={{display:'inline-block'}} onClick={e => navigate('/pirate/new')}>Add Pirate</button>\n                </div>\n                {pirates.map((pirate, i)=>{\n                    return (\n                    <div style={{border: \"1px solid black\", margin: '4px'}} key={i}>\n                        <img style={{display:'inline-block'}} src={pirate.imageUrl} alt={pirate.name}/>\n                        <div style={{display:'inline-block', textAlign:\"center\"}}>\n                            <h3>{pirate.name}</h3>\n                            <button onClick={e=> navigate('/pirate/'+pirate._id)}>View Pirate</button>\n                            <DeleteButton id={pirate._id} remove={remove}/>\n                        </div>\n                    </div>\n                        )})}\n            </div>\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport axios from 'axios';\nimport {navigate} from '@reach/router';\n\nexport default ({pirate, method, url}) =>{\n    const [name, setName] = useState(pirate.name);\n    const [imageUrl, setImageUrl] = useState(pirate.image);\n    const [phrase, setPhrase] = useState(pirate.phrase);\n    const [treasure, setTreasure] = useState(pirate.treasure);\n    const [position, setPosition] = useState(pirate.position);\n    const [eye, setEye] = useState(pirate.desc.eye);\n    const [hook, setHook] = useState(pirate.desc.hook);\n    const [peg, setPeg] = useState(pirate.desc.peg);\n    const [desc, setDesc] = useState({\n        \"eye\":eye,\n        \"hook\":hook,\n        \"peg\":peg\n    });\n\n    const [errors, setErrors] = useState([]);\n\n    const onSubmit=e=>{\n        e.preventDefault();\n        setErrors([]);\n        axios[method](url, {\n            name,\n            treasure,\n            imageUrl,\n            phrase,\n            desc,\n            position\n        })\n            .then(()=>navigate('/pirates'))\n            .catch(err=>{\n                const errorArr = [];\n                const errorObj = err.response.data.errors;\n                console.log(errorObj);\n                for(const key in errorObj){\n                    console.log(errorObj[key].properties.message);\n                    errorArr.push(errorObj[key].properties.message);\n                }\n                setErrors(errorArr);\n            });\n    }\n\n    return(\n        <div>\n            {errors.map((err, i) => (<p key={i} style={{color:'red'}}>{err}</p>))}\n            <form onSubmit={onSubmit}>\n                <p>\n                    <label>Name: </label>\n                    <input type=\"text\" value={name} onChange={e=>{setName(e.target.value)}}/>\n                </p>\n                <p>\n                    <label>Image Url: </label>\n                    <input type=\"text\" value={imageUrl} onChange={e=>{setImageUrl(e.target.value)}}/>\n                </p>\n                <p>\n                    <label># of Treasure Chests: </label>\n                    <input type=\"number\" value={treasure} onChange={e=>{setTreasure(e.target.value)}}/>\n                </p>\n                <p>\n                    <label>Pirate Catch Phrase: </label>\n                    <input type=\"text\" value={phrase} onChange={e=>{setPhrase(e.target.value)}}/>\n                </p>\n                <p>\n                    <label>Position: </label>\n                    <select onChange={e=>{setPosition(e.target.value)}}>\n                        <option selected value=\"First Mate\">Select Position</option>\n                        <option value=\"Captian\">Captian</option>\n                        <option value=\"First Mate\">First Mate</option>\n                        <option value=\"Quarter Master\">Quarter Master</option>\n                        <option value=\"Boatswain\">Boatswain</option>\n                        <option value=\"Powder Monkey\">Powder Monkey</option>\n                    </select>\n                </p>\n                <p>\n                    <input type=\"checkbox\" value={!peg} checked={peg} onChange={e=>{setPeg(e.target.value)}}/>\n                    <label>Peg Leg</label>\n                    <input type=\"checkbox\" value={!eye} checked={eye} onChange={e=>{setEye(e.target.value)}}/>\n                    <label>Eye Patch</label>\n                    <input type=\"checkbox\" value={!hook} checked={hook} onChange={e=>{setHook(e.target.value)}}/>\n                    <label>Hook Hand</label>\n                </p>\n                <button type='submit'>Add Pirate</button>\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport PirateForm from '../components/PirateForm';\nimport { navigate } from '@reach/router';\n\nexport default props =>{\n    const newPirate = {\n        name: '',\n        treasure: 0,\n        imageUrl: '',\n        phrase: '',\n        position: '',\n        desc: {\n            hook: true,\n            eye: true,\n            peg: true\n        }\n    };\n\n    return (\n        <div>\n            <div>\n                <h3>Add Pirate</h3>\n                <button onClick={e => navigate('/pirates')}>Crew Board</button>\n            </div>\n            <PirateForm pirate={newPirate} method=\"post\" url=\"http://localhost:8000/api/new\"/>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default ({id}) => {\n    const [pirate, setPirate] = useState(null);\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pirate/' + id)\n        .then(res => setPirate(res.data));\n    }, [id]);\n\n    if(pirate === null) return 'Loading...';\n\n    return (\n    <div style={{textAlign: 'center'}}>\n        <h1>{pirate.name}</h1>\n        <div style={{display:'inline-block', margin: '5px', verticalAlign: 'top'}}>\n            <img src={pirate.imageUrl} alt={pirate.name}/>\n            <h1>\"{pirate.phrase}\"</h1>\n        </div>\n        <div style={{display:'inline-block', margin: '5px', verticalAlign: 'top'}}>\n            <h2>About</h2>\n            <p>Position: {pirate.position}</p>\n            <p>Treasures: {pirate.treasure}</p>\n            <p>Peg Leg: {pirate.peg ? 'Yes' : 'No'}</p>\n            <p>Eye Patch: {pirate.eye ? 'Yes' : 'No'}</p>\n            <p>Hook Hand: {pirate.hook ? 'Yes' : 'No'}</p>\n        </div>\n    </div>\n    )\n}","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from \"@reach/router\"\n\nexport default () => {\n    const [user, setUser] = useState({\n        firstName:\"\",\n        lastName:\"\",\n        email:\"\",\n        password:\"\",\n        passwordConfirmation:\"\"\n    });\n\n    const handleChange= (e) =>{\n        const { name, value } = e.target;\n        setUser({\n            ...user,\n            [name]: value\n        });\n    }\n\n    const handleSubmit= (e) => {\n        e.preventDefault();\n        axios.post('http://localhost:8000/api/user', user, { withCredentials:true })\n            .then(()=> navigate('/pirates'))\n            .catch(console.log)\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>First Name: </label>\n                        <input\n                            name=\"firstName\"\n                            value={user.firstName}\n                            onChange ={handleChange}\n                        />\n                </div>\n                <div>\n                    <label>Last Name: </label>\n                        <input\n                            name=\"lastName\"\n                            value={user.lastName}\n                            onChange ={handleChange}\n                        />\n                </div>\n                <div>\n                    <label>Email: </label>\n                        <input\n                            name=\"email\"\n                            value={user.email}\n                            onChange ={handleChange}\n                        />\n                </div>\n                <div>\n                    <label>Password: </label>\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        value={user.password}\n                        onChange ={handleChange}\n                    />\n                </div>\n                <div>\n                    <label>Password Confirmation: </label>\n                    <input\n                        name=\"passwordConfirmation\"\n                        type=\"password\"\n                        value={user.passwordConfirmation}\n                        onChange ={handleChange}\n                    />\n                </div>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}","import React, { useState } from \"react\";\nimport axios from 'axios';\nimport { navigate } from \"@reach/router\";\nimport UserForm from \"../components/UserForm\";\n\nexport default function Login() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [err, setErr] = useState('');\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n        setErr('');\n        axios.post('http://localhost:8000/api/user/login', {\n            email,\n            password\n        }, { withCredentials: true })\n            .then(()=> navigate('/pirates'))\n            .catch(()=> setErr('Please check email/password'));\n    }\n\n    return(\n        <div>\n            <h1>Login</h1>\n            {err && (\n                <p style={{color:'red'}}>{err}</p>\n            )}\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Email: </label>\n                    <input\n                        name=\"email\"\n                        value={email}\n                        onChange ={e => setEmail(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label>Password: </label>\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        onChange ={e => setPassword(e.target.value)}\n                    />\n                </div>\n                <button type=\"submit\">Submit</button>\n            </form>\n            <h1>Register</h1>\n            <UserForm/>\n        </div>\n    )\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nexport default () => {\n    const handleClick= e => {\n        axios.delete('http://localhost:8000/api/user/logout', { withCredentials:true})\n            .then(() => navigate('/'))\n            .catch(console.log);\n    }\n\n    return (\n        <button onClick={handleClick}>Log Out</button>\n    );\n}","import React from 'react';\nimport Dashboard from './views/Dashboard';\nimport CreatePirate from './views/CreatePirate';\nimport PirateInfo from './views/PirateInfo';\nimport {Router} from '@reach/router';\nimport RegLog from './views/RegLog';\nimport LogOutButton from './components/LogoutButton';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <LogOutButton/>\n      <Router>\n        <RegLog path=\"/\"/>\n        <Dashboard path=\"pirates\"/>\n        <CreatePirate path=\"pirate/new\"/>\n        <PirateInfo path=\"pirate/:id\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}